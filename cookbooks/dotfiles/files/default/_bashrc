# -------------------------------------------
# Before
# -------------------------------------------

# Local configuration
if [ -f ~/.bashrc-local ]; then
    . ~/.bashrc-local
fi

# OS specific support
OS_CYGWIN=false
OS_MSYS=false
OS_DARWIN=false
case "`uname`" in
  CYGWIN* )
    OS_CYGWIN=true
    ;;
  Darwin* )
    OS_DARWIN=true
    ;;
  MINGW* )
    OS_MSYS=true
    ;;
esac

# -------------------------------------------
# Helper function
# -------------------------------------------

# Change upper dir
# http://d.hatena.ne.jp/hitode909/20101002/1285994430
function up() {
    to=$(perl -le '$p=$ENV{PWD}."/";$d="/".$ARGV[0]."/";$r=rindex($p,$d);\
                   $r>=0 && print substr($p, 0, $r+length($d))' $1)
    if [ "$to" = "" ]; then
        echo "no such file or directory: $1" 1>&2
        return 1
    fi
    cd $to
}
function gup() { # for Git
    cd ./$(git rev-parse --show-cdup)
    if [ $# = 1 ]; then
        cd $1
    fi
}

# Expand path
resolve_symlink() {
    local TARGET=$1

    # if target is symbolic link
    if [ -L $TARGET ]; then
        local ORIGINAL_FILEPATH=`readlink $TARGET`

        # if original is specified as absolute path
        if [ $(echo $ORIGINAL_FILEPATH | cut -c 1) = "/" ]; then
            echo "$ORIGINAL_FILEPATH"
        else
            echo "$(dirname $TARGET)/$ORIGINAL_FILEPATH"
        fi
    else
        echo "$TARGET"
    fi
}
expand_path() {
    local TARGET=$1
    if [ -d "$TARGET" ]; then
        echo $(cd $TARGET && pwd -P)
    elif [ -f "$TARGET" ]; then
        local TARGET_RESOLVED=$(resolve_symlink $TARGET)
        local FILENAME=$(basename $TARGET_RESOLVED)
        local DIR_EXPANDED="$(expand_path $(dirname $TARGET_RESOLVED))"
        echo "$DIR_EXPANDED/$FILENAME"
    else
        echo "$TARGET"
    fi
}

# -------------------------------------------
# Shell
# -------------------------------------------

# Prepare Git prompt
if [ -f /usr/local/etc/bash_completion ]; then
    . /usr/local/etc/bash_completion
elif [ -f ~/.git-completion.bash.ps1only ]; then
    . ~/.git-completion.bash.ps1only
fi

# Prompt
case "$TERM" in
xterm-color | xterm-256color | screen-256color)
    PS1='\[\033[01;33m\]$SHLVL\[\033[00m\]:\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[01;33m\]\[\033[00m\]\n\$ '
    ;;
*)
    PS1='$SHLVL:\u@\h:\w\n\$ '
    ;;
esac
to_simple_prompt() {
    export PS1="\[\033[01;33m\]\$\[\033[00m\] "
}

# Misc
export IGNOREEOF=1  # need twice Ctrl+D to exit
export FIGNORE='~:.svn:.DS_Store' # ignore on completion

# ^H as Backslash
#stty erase ^h
#stty erase ^?


#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!
#[[ -s "/home/vagrant/.gvm/bin/gvm-init.sh" && -z $(which gvm-init.sh | grep '/gvm-init.sh') ]] && source "/home/vagrant/.gvm/bin/gvm-init.sh"
source "/home/vagrant/.gvm/bin/gvm-init.sh"


# -------------------------------------------
# After
# -------------------------------------------

# Local configuration
if [ -f ~/.bashrc-local ]; then
    . ~/.bashrc-local
fi

